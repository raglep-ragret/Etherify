/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EtherifyPlaylist,
  EtherifyPlaylistInterface,
} from "../EtherifyPlaylist";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "trackToAdd",
        type: "string",
      },
    ],
    name: "addTrack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlaylist",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "spotifyLink",
            type: "string",
          },
        ],
        internalType: "struct EtherifyPlaylist.EtherifyTrack[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalTracks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getTracksByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "spotifyLink",
            type: "string",
          },
        ],
        internalType: "struct EtherifyPlaylist.EtherifyTrack[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tracksByAddress",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "spotifyLink",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200005d6040518060400160405280601d81526020017f457468657269667920706c61796c69737420696e697469616c697a65640000008152506200006360201b6200073b1760201c565b620001f7565b62000103816040516024016200007a919062000170565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200010660201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006200013c8262000194565b6200014881856200019f565b93506200015a818560208601620001b0565b6200016581620001e6565b840191505092915050565b600060208201905081810360008301526200018c81846200012f565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620001d0578082015181840152602081019050620001b3565b83811115620001e0576000848401525b50505050565b6000601f19601f8301169050919050565b61110a80620002076000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630e62ced51461005c5780639229824e1461007a5780639751da24146100aa578063bf0c4bf1146100db578063ed0aad4d146100f9575b600080fd5b610064610115565b6040516100719190610d44565b60405180910390f35b610094600480360381019061008f9190610b09565b61029a565b6040516100a19190610d44565b60405180910390f35b6100c460048036038101906100bf9190610b32565b610442565b6040516100d2929190610d14565b60405180910390f35b6100e361052b565b6040516100f09190610e2d565b60405180910390f35b610113600480360381019061010e9190610b6e565b61055f565b005b60606101556040518060400160405280601c81526020017f486572652773207468652063757272656e7420706c61796c6973743a0000000081525061073b565b6000805480602002602001604051908101604052809291908181526020016000905b8282101561029157838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461020090610f82565b80601f016020809104026020016040519081016040528092919081815260200182805461022c90610f82565b80156102795780601f1061024e57610100808354040283529160200191610279565b820191906000526020600020905b81548152906001019060200180831161025c57829003601f168201915b50505050508152505081526020019060010190610177565b50505050905090565b60606102be6040518060600160405280602781526020016110ae60279139836107d4565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561043757838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546103a690610f82565b80601f01602080910402602001604051908101604052809291908181526020018280546103d290610f82565b801561041f5780601f106103f45761010080835404028352916020019161041f565b820191906000526020600020905b81548152906001019060200180831161040257829003601f168201915b5050505050815250508152602001906001019061031d565b505050509050919050565b6001602052816000526040600020818154811061045e57600080fd5b9060005260206000209060020201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546104a890610f82565b80601f01602080910402602001604051908101604052809291908181526020018280546104d490610f82565b80156105215780601f106104f657610100808354040283529160200191610521565b820191906000526020600020905b81548152906001019060200180831161050457829003601f168201915b5050505050905082565b60006105546040518060600160405280602b8152602001611083602b9139600080549050610870565b600080549050905090565b600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152509050600081908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061061d9291906109d4565b505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906106ec9291906109d4565b5050506107376040518060400160405280601581526020017f2573206164646564206120747261636b3a0a25730a00000000000000000000008152508260000151836020015161090c565b5050565b6107d18160405160240161074f9190610d66565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109ab565b50565b61086c82826040516024016107ea929190610d88565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109ab565b5050565b6109088282604051602401610886929190610dfd565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109ab565b5050565b6109a683838360405160240161092493929190610db8565b6040516020818303038152906040527fe0e9ad4f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109ab565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546109e090610f82565b90600052602060002090601f016020900481019282610a025760008555610a49565b82601f10610a1b57805160ff1916838001178555610a49565b82800160010185558215610a49579182015b82811115610a48578251825591602001919060010190610a2d565b5b509050610a569190610a5a565b5090565b5b80821115610a73576000816000905550600101610a5b565b5090565b6000610a8a610a8584610e6d565b610e48565b905082815260208101848484011115610aa257600080fd5b610aad848285610f40565b509392505050565b600081359050610ac481611054565b92915050565b600082601f830112610adb57600080fd5b8135610aeb848260208601610a77565b91505092915050565b600081359050610b038161106b565b92915050565b600060208284031215610b1b57600080fd5b6000610b2984828501610ab5565b91505092915050565b60008060408385031215610b4557600080fd5b6000610b5385828601610ab5565b9250506020610b6485828601610af4565b9150509250929050565b600060208284031215610b8057600080fd5b600082013567ffffffffffffffff811115610b9a57600080fd5b610ba684828501610aca565b91505092915050565b6000610bbb8383610cc8565b905092915050565b610bcc81610f04565b82525050565b610bdb81610f04565b82525050565b6000610bec82610eae565b610bf68185610ed1565b935083602082028501610c0885610e9e565b8060005b85811015610c445784840389528151610c258582610baf565b9450610c3083610ec4565b925060208a01995050600181019050610c0c565b50829750879550505050505092915050565b6000610c6182610eb9565b610c6b8185610ee2565b9350610c7b818560208601610f4f565b610c8481611043565b840191505092915050565b6000610c9a82610eb9565b610ca48185610ef3565b9350610cb4818560208601610f4f565b610cbd81611043565b840191505092915050565b6000604083016000830151610ce06000860182610bc3565b5060208301518482036020860152610cf88282610c56565b9150508091505092915050565b610d0e81610f36565b82525050565b6000604082019050610d296000830185610bd2565b8181036020830152610d3b8184610c8f565b90509392505050565b60006020820190508181036000830152610d5e8184610be1565b905092915050565b60006020820190508181036000830152610d808184610c8f565b905092915050565b60006040820190508181036000830152610da28185610c8f565b9050610db16020830184610bd2565b9392505050565b60006060820190508181036000830152610dd28186610c8f565b9050610de16020830185610bd2565b8181036040830152610df38184610c8f565b9050949350505050565b60006040820190508181036000830152610e178185610c8f565b9050610e266020830184610d05565b9392505050565b6000602082019050610e426000830184610d05565b92915050565b6000610e52610e63565b9050610e5e8282610fb4565b919050565b6000604051905090565b600067ffffffffffffffff821115610e8857610e87611014565b5b610e9182611043565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f0f82610f16565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610f6d578082015181840152602081019050610f52565b83811115610f7c576000848401525b50505050565b60006002820490506001821680610f9a57607f821691505b60208210811415610fae57610fad610fe5565b5b50919050565b610fbd82611043565b810181811067ffffffffffffffff82111715610fdc57610fdb611014565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61105d81610f04565b811461106857600080fd5b50565b61107481610f36565b811461107f57600080fd5b5056fe54686572652061726520256420746f74616c20747261636b7320696e2074686520706c61796c697374200a47657474696e6720747261636b73207375626d697474656420627920616464726573732025733aa264697066735822122005fccdb17be73acb868085566ea3ae809f27598209c123b1821a46332a43331c64736f6c63430008040033";

type EtherifyPlaylistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EtherifyPlaylistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EtherifyPlaylist__factory extends ContractFactory {
  constructor(...args: EtherifyPlaylistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EtherifyPlaylist> {
    return super.deploy(overrides || {}) as Promise<EtherifyPlaylist>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EtherifyPlaylist {
    return super.attach(address) as EtherifyPlaylist;
  }
  connect(signer: Signer): EtherifyPlaylist__factory {
    return super.connect(signer) as EtherifyPlaylist__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherifyPlaylistInterface {
    return new utils.Interface(_abi) as EtherifyPlaylistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EtherifyPlaylist {
    return new Contract(address, _abi, signerOrProvider) as EtherifyPlaylist;
  }
}
